{"version":3,"sources":["components/DisplayTask.js","App.js","index.js"],"names":["DisplayTask","e","this","props","tasks","map","task","index","className","text","onClick","preventDefault","document","getElementsByClassName","style","display","type","clickedit","id","value","onChange","targetValue","target","updateInput","saveInput","Component","App","updateTask","setState","state","updateTasks","concat","uniqid","editTask","bind","updatedList","filter","item","somevalue","ind","updatenewstate","console","log","prevState","onSubmit","placeholder","required","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77b208d5.chunk.js","sourcesContent":["import React,{Component} from \"react\"\nclass DisplayTask extends Component{\n    deleteMethod(e){\n        \n    }\n    render(){\n        return(\n            <div>\n                {this.props.tasks.map((task,index)=>{\n                    return(\n                        <div key={task.id}>\n                            <p className=\"taskList\">{task.text} \n                            <button onClick={(e)=>{\n                                e.preventDefault()\n                                document.getElementsByClassName(\"save\")[index].style.display=\"block\"\n                            }}>Edit</button> \n                            \n                            <button type=\"submit\" onClick={(e)=>{\n                                e.preventDefault()\n                                this.props.clickedit(task.id)\n                            }}>Delete</button></p> \n                            \n                            <div className=\"save\">\n                                <input type=\"text\" value={task.text} onChange={(e)=>{\n                                    const targetValue=e.target.value;\n                                    this.props.updateInput(targetValue,index)\n                                }} ></input>\n                                <button type=\"submit\" className=\"saveButton\" onClick={(e)=>{\n                                    e.preventDefault()\n                                    document.getElementsByClassName(\"save\")[index].style.display=\"none\"\n                                    this.props.saveInput()\n                                }}>Save</button>\n                            </div>\n                        </div>      \n                    )\n                })}\n            </div>    \n\n        )\n    }\n}\nexport default DisplayTask","import React,{Component} from \"react\"\nimport DisplayTask from \"./components/DisplayTask\"\nimport uniqid from \"uniqid\"\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state={\n      tasks:[],\n      task:{text:\"\",id:uniqid()}\n    }\n    this.editTask=this.editTask.bind(this)\n    this.updateTask=this.updateTask.bind(this)\n    this.updateTasks=this.updateTasks.bind(this)\n    this.updateInput=this.updateInput.bind(this)\n    this.saveInput=this.saveInput.bind(this)\n  }\n\n  editTask(id){\n    const newList=[...this.state.tasks]\n    const updatedList=newList.filter(item=>item.id!==id)\n    this.setState({\n      tasks:updatedList,\n      task:{text:\"\",id:uniqid()}\n    })\n  }\n  \n  updateTask=(e)=>{\n    this.setState({task:{text:e.target.value,id:this.state.task.id}})\n  }\n  \n  updateTasks=(e)=>{\n    e.preventDefault();\n    this.setState({tasks:this.state.tasks.concat(this.state.task),task:{text:\"\",id:uniqid()}})\n  }\n  updateInput(somevalue,ind){\n    const newstate=[...this.state.tasks]\n    const updatenewstate=newstate.map((item,index)=>{\n      if(index===ind){\n        return(item[index]={text:somevalue,id:item.id})\n      }\n      else return item\n    })\n    this.setState({\n      tasks:updatenewstate,\n      task:{text:somevalue,id:uniqid()}\n    })\n  }\n  saveInput(){\n    console.log(\"saved\")\n    this.setState(prevState=>{\n      return{\n        task:{text:\"\",id:uniqid()}\n      }\n    })\n  }\n  \n  render(){\n    return(\n      <div className=\"appContainer\">\n        <form onSubmit={this.updateTasks}>\n          <input type=\"text\" placeholder=\"Enter The Task\" onChange={this.updateTask} value={this.state.task.text} required></input>\n          <button type=\"submit\">Add</button>\n              <DisplayTask tasks={this.state.tasks} clickedit={this.editTask} updateInput={this.updateInput} \n                saveInput={this.saveInput} updateTasks={this.updateTasks}/>\n        </form>\n      </div>\n    )\n  }\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}